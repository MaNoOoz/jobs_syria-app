// lib/main.dartimport 'package:firebase_core/firebase_core.dart';import 'package:flutter/gestures.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:get/get.dart';import 'package:get_storage/get_storage.dart';import 'package:intl/date_symbol_data_local.dart';import 'package:quiz_project/routes/app_pages.dart';import 'package:quiz_project/services/auth_service.dart';import 'package:quiz_project/services/location_service.dart';import 'package:quiz_project/utils/Constants.dart';// import 'package:quiz_project/utils/storage_keys.dart'; // No longer needed for initial route decisionimport 'package:quiz_project/utils/theme_service.dart';import 'controllers/home_controller.dart'; // Make sure this is correctly importedimport 'firebase_options.dart';Future<void> main() async {  WidgetsFlutterBinding.ensureInitialized();  // Initialize for Arabic locale  await initializeDateFormatting('ar');  await GetStorage.init();  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);  // Initialize services. AuthService should be put early to manage initial routing.  Get.put(LocationService());  Get.put(ThemeService());  Get.put(AuthService()); // AuthService handles initial navigation based on Firebase Auth state  runApp(const MyApp());}class MyApp extends StatelessWidget {  const MyApp({super.key});  @override  Widget build(BuildContext context) {    // The initial route is set to LOGIN. AuthService will handle redirection    // to MAIN if a user is already authenticated with Firebase.    const String initialRoute = Routes.LOGIN;    return ScreenUtilInit(      designSize: const Size(360, 690), // Your target design size (e.g., from your design mockups)      minTextAdapt: true,      splitScreenMode: true,      builder: (BuildContext context, Widget? child) {        return GetMaterialApp(          debugShowCheckedModeBanner: false,          title: APP_NAME,          initialBinding: InitialBindings(), // Ensure InitialBindings is set up correctly          getPages: AppPages.pages,          initialRoute: initialRoute,          themeMode: Get.find<ThemeService>().themeMode,          theme: Get.find<ThemeService>().darkTheme,          darkTheme: Get.find<ThemeService>().darkTheme,          textDirection: TextDirection.rtl,          locale: const Locale('ar'),          fallbackLocale: const Locale('en'),        );      },    );  }}// Ensure InitialBindings is defined, for example:class InitialBindings extends Bindings {  @override  void dependencies() {    // You might put controllers or other dependencies here if needed globally    // For example, if HomeController is used across many screens, you could put it here:    Get.put(HomeController());  }}