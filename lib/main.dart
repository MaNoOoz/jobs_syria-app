// lib/main.dartimport 'package:firebase_core/firebase_core.dart';import 'package:flutter/gestures.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:get/get.dart';import 'package:get_storage/get_storage.dart';import 'package:intl/date_symbol_data_local.dart';import 'package:quiz_project/routes/app_pages.dart';import 'package:quiz_project/services/auth_service.dart';import 'package:quiz_project/utils/storage_keys.dart';import 'package:quiz_project/utils/theme_service.dart';import 'controllers/home_controller.dart';import 'firebase_options.dart';Future<void> main() async {  WidgetsFlutterBinding.ensureInitialized();  // Initialize for Arabic locale  await initializeDateFormatting('ar');  await GetStorage.init();  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);  Get.put(ThemeService());  Get.put(AuthService());  runApp(const MyApp());}class MyApp extends StatelessWidget {  const MyApp({super.key});  @override  Widget build(BuildContext context) {    final box = GetStorage();    final currentUserData = box.read(StorageKeys.currentUser);    print("Current User Data: $currentUserData");    final String initialRoute = currentUserData == null ? Routes.LOGIN : Routes.MAIN;    return ScreenUtilInit(      designSize: const Size(360, 690), // Your target design size (e.g., from your design mockups)      minTextAdapt: true,      splitScreenMode: true,      builder: (BuildContext context, Widget? child) {        return GetMaterialApp(          debugShowCheckedModeBanner: false,          title: 'وظائف قريبة منك',          initialBinding: InitialBindings(),          getPages: AppPages.pages,          initialRoute: initialRoute,          themeMode: Get.find<ThemeService>().themeMode,          theme: Get.find<ThemeService>().lightTheme,          darkTheme: Get.find<ThemeService>().darkTheme,          textDirection: TextDirection.rtl,          locale: const Locale('ar'),          fallbackLocale: const Locale('en'),        );      },    );  }}